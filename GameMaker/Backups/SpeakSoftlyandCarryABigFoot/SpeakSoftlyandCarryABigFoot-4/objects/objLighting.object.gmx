<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Create a surface that is the size of the room
surf = surface_create(room_width, room_height);

surface_set_target(surf);
draw_clear_alpha(c_black, 0);

//Reset to application surface
surface_reset_target();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (surface_exists(surf))
{
    surface_set_target(surf);
    //set the dark overlay
    draw_set_colour(c_black);
    //change darkness level of the environment here
    draw_set_alpha(1);
    draw_rectangle(0,0,room_width,room_height,false);
    
    //set circle of vision 
    draw_set_blend_mode(bm_subtract);
    
    //start circles of vision
    draw_set_colour(c_white); //change to c_white if need be
    draw_set_alpha(0.5)
    //draw the circle of vision around hero
    
    with (objTeddy) //add the actual main character object here
    {   //torchlight 1
        draw_circle(x+70 + random_range(-1,1), y+70 + random_range(-1,1), 260 + random_range(-1,1), false);
    }
    
    draw_set_colour(c_white); //change to c_white if need be
    draw_set_alpha(0.7)
    //draw the circle of vision around hero
    
    with (objTeddy) //add the actual main character object here
    {   //torchlight 1
        draw_circle(x+70 + random_range(-1,1), y+70 + random_range(-1,1), 190 + random_range(-1,1), false);
    }
    
    draw_set_colour(c_white); //change to c_orange to add torchlight color
    draw_set_alpha(1);
    
    with (objTeddy) //add the actual character object here
    {   //bigger faded torchlight 2
        draw_circle(x+70 + random_range(-1,1), y+70 + random_range(-1,1), 150 + random_range(-1,1), false);
    }
    
    //reset all the set draws , dont touch
    draw_set_blend_mode(bm_normal);
    draw_set_alpha(1);
    surface_reset_target();
    
} else {
    //in some cases the surface is not created so we create it here
    surf = surface_create(room_width, room_height);
    surface_set_target(surf);
    draw_clear_alpha(c_black, 0);
    surface_reset_target();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(surf)){
    surf = surface_create(room_width, room_height);
}
else {
    if (view_current == 0) {
        draw_surface(surf, 0, 0, );
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
